-- ===================================================================
-- Schema y datos para metropolitan_db (todas las PK autogeneradas)
-- ===================================================================

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

-- ===============================================================
-- Drop
-- ===============================================================
DROP TABLE IF EXISTS public.activity CASCADE;
DROP TABLE IF EXISTS public.member CASCADE;
DROP TABLE IF EXISTS public.spaces CASCADE;
DROP TABLE IF EXISTS public.states_schedule CASCADE;

-- ===============================================================
-- Tablas (PK como BIGINT IDENTITY)
-- ===============================================================

CREATE TABLE public.spaces (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar NOT NULL UNIQUE,
    description varchar NOT NULL UNIQUE
);

CREATE TABLE public.states_schedule (
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL UNIQUE
);

CREATE TABLE public.activity (
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       varchar NOT NULL,
    scheduled  date    NOT NULL,
    spaces_id  BIGINT  NOT NULL REFERENCES public.spaces(id)
);

CREATE TABLE public.member (
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       varchar NOT NULL,
    dni        varchar NOT NULL UNIQUE,
    city       varchar NOT NULL,
    calendario jsonb   NOT NULL
);

-- ===============================================================
-- Propietarios (si usas el rol admin)
-- ===============================================================
ALTER TABLE public.activity        OWNER TO admin;
ALTER TABLE public.member          OWNER TO admin;
ALTER TABLE public.spaces          OWNER TO admin;
ALTER TABLE public.states_schedule OWNER TO admin;

-- ===============================================================
-- Datos (dejamos IDs expl√≠citos: Identity BY DEFAULT lo permite)
-- ===============================================================

INSERT INTO public.spaces (id, name, description) VALUES
(1, 'padel_1', 'pista de padel principal'),
(2, 'padel_2', 'pista de padel secundaria, usar en clases infantiles'),
(3, 'cycling', 'aula para clases de cycling/spining'),
(4, 'open', 'aula para multiples usos, clases de aerobic, yoga, zumba, etc');

INSERT INTO public.states_schedule (id, name) VALUES
(1, 'reserva'),
(2, 'cancelar'),
(3, 'realizado'),
(4, 'ausente');

INSERT INTO public.activity (id, name, scheduled, spaces_id) VALUES
(1, 'padel infanil', '2025-01-07', 2),
(2, 'zumba',         '2025-01-07', 4),
(3, 'spining',       '2025-01-07', 3),
(4, 'spining',       '2025-02-07', 3);

INSERT INTO public.member (id, name, dni, city, calendario) VALUES
(2, 'Oscar', '2456715S', 'Madrid',
  '[{"state": 4, "actividad_id": 2}, {"state": 2, "actividad_id": 3}, {"state": 1, "actividad_id": 4}]'::jsonb),
(1, 'Luis',  '3264759F', 'Valencia',
  '[{"state": 2, "actividad_id": 2}, {"state": 1, "actividad_id": 3}]'::jsonb);

-- ===============================================================
-- Ajuste de secuencias al MAX(id) para que lo siguiente sea autogenerado
-- ===============================================================
SELECT setval(pg_get_serial_sequence('public.spaces','id'),         GREATEST((SELECT COALESCE(MAX(id),0) FROM public.spaces),1), true);
SELECT setval(pg_get_serial_sequence('public.states_schedule','id'),GREATEST((SELECT COALESCE(MAX(id),0) FROM public.states_schedule),1), true);
SELECT setval(pg_get_serial_sequence('public.activity','id'),       GREATEST((SELECT COALESCE(MAX(id),0) FROM public.activity),1), true);
SELECT setval(pg_get_serial_sequence('public.member','id'),         GREATEST((SELECT COALESCE(MAX(id),0) FROM public.member),1), true);
